server.port=8082

# режим в котором хибернейт генерирует базу данных
# create - удаляется база данных и создается новая
# update
# validate - вместо создания или обновление хабернайт будет проверять корректность нашей модели с томучто мы имеем в базе данных
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:postgresql://localhost:5432/switter
spring.datasource.username=postgres
spring.datasource.password=54321
spring.jpa.generate-ddl=true


# показывать в логах sql запросы
# (нужен один раз при миграции чтобы получить готовые sql запросы при режиме - create)
# потом переволдим его в false
spring.jpa.show-sql=false


#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/db_example
#spring.datasource.username=springuser
#spring.datasource.password=ThePassword

# включает дополнительные атрибуты для мусташ - токин для безопасности
#spring.mustache.expose-request-attributes=true
#spring.freemarker.expose-request-attributes=true

# для загрузки файлов указываем их путь храниния
upload.path=/Users/samuilolegovich/Documents/JAVA/Download

# настройки конфигурации для отправки емейла
spring.mail.host=smtp.yandex.ru
spring.mail.username=uw@dru.su
spring.mail.password=12345678
spring.mail.port=465
spring.mail.protocol=smtps
mail.debug=true






#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
